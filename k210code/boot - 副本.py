# object detector boot.py
# generated by maixhub.com
from fpioa_manager import fm
from machine import UART
import sensor, image, lcd, time

import gc, sys
import math
fm.register(10, fm.fpioa.UART1_TX, force=True)
fm.register(11, fm.fpioa.UART1_RX, force=True)

uart = UART(UART.UART1, 9600, 8, 1, 0, timeout=1000, read_buf_len=4096)
def pixwl_to_realty(cx,cy):
    x2=0.0498*cx+0.0014*cy-14.5764
    y2=0.0000394*cx-0.0519*cy+24.7864
    x2=x2/100
    y2=y2/100
    return x2,y2
def recive_data():
    global uart
    global tmp_data
    if uart.any():
        tmp_data = uart.readline()
        print(temp_data)
        print("OK")
def distancen(blobn):
    wincx=160
    wincy=120
    x=blobn.x()
    y=blobn.y()
    return   math.sqrt(math.pow(wincx-x,2)+math.pow(wincy-y,2))
def compareblobs(blob1,blob2):
    temp=blob2.x()-blob1.x()
    if temp>0:
        return 1
    elif temp<0:
        return -1
    else:
        return 0
rechar=0x00
rechar1=0x00
rechar2=0x00
sendbuff=[0]*5;
center_Roi=[137,110,76,59]
thresholds = [

(39, 49, 5, 80, -21, 41),   #红

             ]
lcd.init()
sensor.reset()
sensor.set_pixformat(sensor.RGB565)
sensor.set_framesize(sensor.QVGA)
sensor.set_vflip(1)
sensor.set_hmirror(1)
sensor.run(1)
while True:
    img = sensor.snapshot()
    #img.draw_rectangle(center_Roi)
    lcd.display(img)
    t = time.ticks_ms()
    nearblob=None
    blobs= img.find_blobs( thresholds, pixels_threshold=300, area_threshold=300,merge=True)
    #img.draw_rectangle(center_Roi, thickness = 2, fill = False)
    if len(blobs)==0:
        continue
    nearblob=blobs[0]
    for blo in blobs:
        if compareblobs(nearblob,blo)==1:
            nearblob=blo
    a= pixwl_to_realty(nearblob.cx(),nearblob.cy())
    if(len(a)):
        out_str="HEAD,%f,%f,-0.12,%d,TAIL"%(a[0],a[1],nearblob.code())
       # if(160>nearblob.cx()>100 and 40<nearblob.cy()<90):
        uart.write(out_str)#串口发送
        print(out_str)
        print(nearblob.cx(),nearblob.cy(),nearblob.code())
        img.draw_cross(160,120,clolr=(255,0,0))
        img.draw_line(160,120,nearblob.cx(),nearblob.cy(),color=(255,0,0))
        img.draw_rectangle(nearblob[0:4])
   # continue;
    time.sleep(0.1)
    try:
        t = time.ticks_ms() - t
        img.draw_string(0, 200, "t:%dms" %(t), scale=2, color=(255, 0, 0))
        lcd.display(img)
    except Exception as e:
        print(e)

